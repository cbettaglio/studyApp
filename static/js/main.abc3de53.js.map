{"version":3,"file":"static/js/main.abc3de53.js","mappings":"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","sources":["App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\nimport { useFonts } from \"expo-font\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport * as Font from \"expo-font\";\nimport { FontAwesome, MaterialIcons } from \"@expo/vector-icons\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  SafeAreaView,\n  Platform,\n  FlatList,\n  Pressable,\n  Dimensions,\n  Image,\n  Alert,\n  ScrollView,\n} from \"react-native\";\nimport { DefaultTheme, NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { Button, Input, CheckBox, Icon, ListItem } from \"@rneui/themed\";\nimport { ButtonGroup } from \"@rneui/base\";\nimport Modal from \"react-native-modal\";\n\nconst INPUT = 0;\nconst DROPDOWN = 1;\nconst MULTIPLECHOICE = 2;\n// Stack screens\nconst Stack = createNativeStackNavigator();\n// creater new theme\nconst navTheme = DefaultTheme;\nnavTheme.colors.background = \"#FFFEFE\";\n// import fonts\nSplashScreen.preventAutoHideAsync();\n\n// functions for creating a responsive design\n// src code: https://medium.com/simform-engineering/create-responsive-design-in-react-native-f84522a44365\nconst { width, height } = Dimensions.get(\"window\");\n\nconst guidelineBaseWidth = 375;\nconst guidelineBaseHeight = 812;\n\nconst horizontalScale = (size) => (width / guidelineBaseWidth) * size;\nconst verticalScale = (size) => (height / guidelineBaseHeight) * size;\n\n// array for all quizzes\nlet quizArray = [\n  {\n    title: \"Default\",\n    quizKey: 0,\n    questions: [\n      {\n        prompt: \"This is an input question\",\n        type: INPUT,\n        answer: \"Input\",\n        key: 0,\n      },\n      {\n        prompt: \"This is a dropdown question\",\n        type: DROPDOWN,\n        choices: [\"choice1\", \"choice2\", \"choice3\"],\n        answer: \"choice1\",\n        key: 1,\n      },\n      {\n        prompt: \"This is a multiple choice question\",\n        type: MULTIPLECHOICE,\n        choices: [\"choice1\", \"choice2\", \"choice3\"],\n        answer: \"choice2\",\n        key: 2,\n      },\n    ],\n  },\n];\nexport default function App() {\n  let [, setLoaded] = useState(false);\n  let cacheFonts = (fonts) => {\n    return Promise.all(\n      fonts.map(async (font) => await Font.loadAsync(font))\n    ).then(() => setLoaded(true));\n  };\n  useEffect(() => {\n    cacheFonts([FontAwesome.font, MaterialIcons.font]);\n  }, []);\n  return (\n    <NavigationContainer theme={navTheme}>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen\n          initialParams={{\n            quizDisplay: quizArray,\n          }}\n          name=\"Home\"\n          component={Home}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Quiz\"\n          component={Quiz}\n          initialParams={{\n            userAnswers: [],\n          }}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Summary\"\n          component={Summary}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Create a Quiz\"\n          component={CreateQuiz}\n          options={{ headerShown: false }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nfunction Home({ route, navigation }) {\n  const [fontsLoaded] = useFonts({\n    \"Nunito-Regular\": require(\"./assets/fonts/Nunito-Regular.ttf\"),\n    \"Nunito-Bold\": require(\"./assets/fonts/Nunito-Bold.ttf\"),\n  });\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n  // displays quizzes to home page\n  const { quizDisplay } = route.params;\n  // const [quizzes, setQuizzes] = useState(quizDisplay);\n  // delete a quiz\n  // console.log(quizzes);\n\n  return (\n    <View style={[styles.container]} onLayout={onLayoutRootView}>\n      <View\n        style={{\n          flex: 1,\n          flexDirection: \"row\",\n          alignContent: \"center\",\n          alignItems: \"center\",\n          gap: 5,\n        }}\n      >\n        <Text style={[styles.header]}>Your quizzes:</Text>\n      </View>\n      <FlatList\n        style={{ height: \"40%\" }}\n        // style={[styles.button, styles.buttonQuiz]}\n        data={quizDisplay}\n        renderItem={({ item, index }) => {\n          return (\n            <Pressable\n              style={[styles.button, styles.buttonQuiz]}\n              onPress={() =>\n                navigation.navigate(\"Quiz\", {\n                  quizTitle: item.title,\n                  questions: item.questions,\n                  questionNum: 0,\n                })\n              }\n            >\n              <View\n                style={{\n                  flex: 1,\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Text style={styles.quizTextStyle}>{item.title}</Text>\n                {/* <View\n                  style={{\n                    flex: 1,\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    gap: horizontalScale(-72),\n                  }}\n                >\n                  <Pressable\n                    style={[{ margin: 40 }]}\n                    onPress={() => {\n                      navigation.navigate(\"EditQuiz\", {\n                        title: item.title,\n                        quizKey: item.quizKey,\n                        questions: item.questions,\n                      });\n                    }}\n                  >\n                    <MaterialIcons name=\"edit\" color=\"#FFFEFE\"></MaterialIcons>\n                  </Pressable>\n                  <Pressable\n                    style={[{ margin: 40 }]}\n                    onPress={() => {\n                      let handleDelete = (quiz) => {\n                        let newQuizArray = quizArray.filter(\n                          (q) => q.quizKey !== quiz.quizKey\n                        );\n                        setQuizzes(newQuizArray);\n                      };\n                      handleDelete(item);\n                    }}\n                  >\n                    <MaterialIcons\n                      name=\"delete\"\n                      color=\"#FFFEFE\"\n                    ></MaterialIcons>\n                  </Pressable>\n                </View> */}\n              </View>\n              <Text\n                style={{\n                  color: \"white\",\n                  textAlign: \"left\",\n                  fontSize: 15,\n                  marginLeft: 40,\n                  marginBottom: 20,\n                }}\n              >\n                Total questions: {item.questions.length}\n              </Text>\n            </Pressable>\n          );\n        }}\n      ></FlatList>\n      <View style={{ flexDirection: \"row\", justifyContent: \"flex-end\" }}>\n        <Pressable\n          onPress={() => navigation.navigate(\"Create a Quiz\")}\n          style={styles.iconButton}\n        >\n          <MaterialIcons name=\"add\" color=\"#FFFEFE\" size={60}></MaterialIcons>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\nfunction Quiz({ route, navigation }) {\n  const { quizTitle, questions, questionNum } = route.params;\n  const userAnswers = route.params.userAnswers;\n  const [curAnswer, setCurAnswer] = useState(\"\");\n  console.log(questions);\n  let { prompt, type, choices } = questions[questionNum];\n  console.log(prompt, type, choices);\n  let nextQuestion = () => {\n    let nextQuestion = questionNum + 1;\n    if (nextQuestion < questions.length) {\n      // console.log(\"Going to next question...\");\n      // console.log({ questionNum: nextQuestion, questions: questions });\n      // console.log(\"Question type:\" + type);\n      navigation.navigate(\"Quiz\", {\n        questionNum: nextQuestion,\n        questions: questions,\n        quizTitle,\n        userAnswers: [...userAnswers, curAnswer],\n      });\n    } else {\n      navigation.navigate(\"Summary\", {\n        userAnswers: [...userAnswers, curAnswer],\n        questions,\n        quizTitle,\n      });\n    }\n  };\n  let questionType;\n  if (type === INPUT) {\n    console.log(\"input\");\n    questionType = <InputText handleAnswer={setCurAnswer}></InputText>;\n  } else if (type === DROPDOWN) {\n    questionType = (\n      <DropDown choices={choices} handleAnswer={setCurAnswer}></DropDown>\n    );\n  } else {\n    questionType = (\n      <MultipleChoice\n        choices={choices}\n        handleAnswer={setCurAnswer}\n      ></MultipleChoice>\n    );\n  }\n  console.log(\"User answers array:\" + userAnswers);\n  return (\n    <View style={styles.container}>\n      <Text\n        style={[\n          styles.header,\n          {\n            textAlign: \"center\",\n            marginTop: verticalScale(40),\n            marginBottom: verticalScale(-40),\n          },\n        ]}\n      >\n        {quizTitle}\n      </Text>\n      <View\n        style={[\n          styles.questionContainer,\n          {\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            marginTop: \"auto\",\n            marginBottom: \"auto\",\n            width: \"85%\",\n            height: \"40%\",\n          },\n        ]}\n      >\n        <View\n          style={{\n            flex: 1,\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            gap: 15,\n          }}\n        >\n          <Text style={[styles.header2, { padding: 10 }]}>{prompt}</Text>\n          {questionType}\n          <Pressable\n            style={{\n              backgroundColor: \"#134611\",\n              borderRadius: 20,\n              padding: 12,\n              elevation: 2,\n              margin: 8,\n            }}\n            onPress={() => {\n              nextQuestion();\n            }}\n          >\n            <Text style={styles.textStyle}>Submit</Text>\n          </Pressable>\n        </View>\n      </View>\n      <View style={{ flexDirection: \"row\", justifyContent: \"flex-end\" }}>\n        <Pressable\n          style={styles.iconButton}\n          onPress={() =>\n            navigation.navigate(\"Home\", { quizDisplay: quizArray })\n          }\n        >\n          <MaterialIcons name=\"home\" color=\"#FFFEFE\" size={55}></MaterialIcons>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nfunction InputText({ handleAnswer }) {\n  let [answerText, setAnswerText] = useState(\"\");\n  return (\n    <Input\n      placeholder=\"Your answer\"\n      value={answerText}\n      onChangeText={(value) => {\n        setAnswerText(value);\n        handleAnswer(value);\n      }}\n    ></Input>\n  );\n}\n\nfunction DropDown({ choices, handleAnswer }) {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(null);\n  const items = choices.map((choices) => {\n    return {\n      label: choices,\n      value: choices,\n    };\n  });\n\n  return (\n    <>\n      <DropDownPicker\n        open={open}\n        value={value}\n        items={items}\n        setOpen={setOpen}\n        setValue={(value) => {\n          setValue(value);\n          handleAnswer(value);\n        }}\n      />\n    </>\n  );\n}\n\nfunction MultipleChoice({ choices, handleAnswer }) {\n  const [selectedIndex, setSelectedIndex] = useState();\n  return (\n    <ButtonGroup\n      buttons={choices}\n      vertical\n      onPress={(value) => {\n        setSelectedIndex(value);\n        handleAnswer(choices[value]);\n      }}\n      selectedIndex={selectedIndex}\n    ></ButtonGroup>\n  );\n}\n// summary function intially provided by instrutor, adjusted for different question types\nfunction Summary({ navigation, route }) {\n  const { quizTitle, userAnswers, questions } = route.params;\n  console.log(questions);\n  let calculateCorrect = (userAnswer, answer) => {\n    let correct = userAnswer == answer;\n    return correct;\n  };\n  let totalScore = 0;\n  for (let i = 0; i < questions.length; i++) {\n    if (calculateCorrect(userAnswers[i], questions[i].answer)) {\n      totalScore++;\n    }\n  }\n  return (\n    <View style={styles.container}>\n      <Text style={[styles.header, { textAlign: \"center\" }]}>{quizTitle}</Text>\n      <View style={styles.questionContainer}>\n        <Text style={styles.header2}>\n          Your score: {totalScore} / {questions.length}\n        </Text>\n      </View>\n      <FlatList\n        data={questions}\n        renderItem={({ item, index }) => {\n          console.log(item);\n          let userSelected =\n            item.type !== INPUT\n              ? item.choices.indexOf(userAnswers[index])\n              : userAnswers[index];\n          console.log(userSelected);\n          let userCorrect =\n            item.type !== INPUT\n              ? calculateCorrect(\n                  userSelected,\n                  item.choices.indexOf(item.answer)\n                )\n              : userSelected === item.answer;\n          if (item.type == INPUT) {\n            let { prompt } = item;\n            return (\n              <View style={styles.questionContainer} key={index}>\n                <Text style={styles.bodyText}>{prompt}</Text>\n                <Text style={styles.bodyText}>Your answer: {userSelected}</Text>\n                <Text style={styles.header3}>\n                  Correct answer: {item.answer}\n                </Text>\n              </View>\n            );\n          } else {\n            let { prompt, answer, choices } = item;\n            return (\n              <View style={styles.questionContainer} key={index}>\n                <Text style={styles.bodyText}>{prompt}</Text>\n                {choices.map((value, choiceIndex) => {\n                  let correct = false;\n                  let userDidSelect = false;\n                  userDidSelect = userSelected == choiceIndex;\n                  correct = userCorrect;\n                  return (\n                    <CheckBox\n                      containerStyle={{\n                        backgroundColor: userDidSelect\n                          ? correct\n                            ? \"lightgreen\"\n                            : \"red\"\n                          : undefined,\n                      }}\n                      checked={choices.indexOf(answer) === choiceIndex}\n                      key={value}\n                      title={value}\n                    ></CheckBox>\n                  );\n                })}\n              </View>\n            );\n          }\n        }}\n      ></FlatList>\n      <View style={{ flexDirection: \"row\", justifyContent: \"flex-end\" }}>\n        <Pressable\n          style={styles.iconButton}\n          onPress={() =>\n            navigation.navigate(\"Home\", { quizDisplay: quizArray })\n          }\n        >\n          <MaterialIcons name=\"home\" color=\"#FFFEFE\" size={50}></MaterialIcons>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n// create quiz function\nfunction CreateQuiz({ navigation, route }) {\n  let [title, setTitle] = useState(\"\");\n  const [modalVisible, setModalVisible] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  let [questionPrompt, setQuestionPrompt] = useState(\"\");\n  let [dropChoices, setDropChoices] = useState([]);\n  let [multiChoices, setMultiChoices] = useState([]);\n  let [inputAnswer, setInputAnswer] = useState(\"\");\n  let [choicesText, setChoicesText] = useState(\"\");\n  let [editModal, setEditModal] = useState(false);\n  let [quesIndex, setQuesIndex] = useState();\n  let questionType;\n  let questionObject;\n  let [selectedIndex2, setSelectedIndex2] = useState();\n  let modalMode;\n  let [error, setError] = useState(\"\");\n  let [errorAnswer, setErrorAnswer] = useState(\"\");\n  // dropdown variables\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(null);\n  const [quesType, setQuesType] = useState(null);\n  const [items, setItems] = useState([\n    { label: \"Input\", value: INPUT },\n    { label: \"Drop Down\", value: DROPDOWN },\n    { label: \"Multiple Choice\", value: MULTIPLECHOICE },\n  ]);\n  let formatDropChoices = dropChoices.map((value, index) => {\n    return (\n      <CheckBox\n        key={index}\n        title={value}\n        checked={selectedIndex2 === index}\n        onPress={() => setSelectedIndex2(index)}\n        checkedColor=\"#3DA35D\"\n      ></CheckBox>\n    );\n  });\n  let formatMultiChoices = multiChoices.map((value, index) => {\n    return (\n      <CheckBox\n        key={index}\n        title={value}\n        checked={selectedIndex2 === index}\n        onPress={() => setSelectedIndex2(index)}\n        checkedColor=\"#3DA35D\"\n      ></CheckBox>\n    );\n  });\n  if (quesType === INPUT) {\n    questionType = (\n      <>\n        <Text style={styles.header3}>Enter Answer:</Text>\n        <Input placeholder=\"Answer\" onChangeText={setInputAnswer}></Input>\n      </>\n    );\n    questionObject = {\n      prompt: questionPrompt,\n      key: questions.length == 0 ? 0 : questions[questions.length - 1].key + 1,\n      type: quesType,\n      answer: inputAnswer,\n    };\n  } else if (quesType === DROPDOWN) {\n    questionType = (\n      <>\n        <Text style={styles.header3}>Enter choices:</Text>\n        <Input placeholder=\"Add a choice\" onChangeText={setChoicesText}></Input>\n        <Pressable\n          style={[styles.button, styles.buttonOpen]}\n          onPress={() => {\n            setDropChoices([...dropChoices, choicesText]);\n            // console.log(dropChoices);\n          }}\n        >\n          <Text style={styles.textStyle}>Add choice</Text>\n        </Pressable>\n        <Text style={styles.header3}>\n          Choices: (Please mark which answer is correct)\n        </Text>\n        <ScrollView style={{ height: height / 6, width: \"100%\" }}>\n          {formatDropChoices}\n        </ScrollView>\n      </>\n    );\n    questionObject = {\n      prompt: questionPrompt,\n      key: questions.length == 0 ? 0 : questions[questions.length - 1].key + 1,\n      type: quesType,\n      choices: dropChoices,\n      answer: dropChoices[selectedIndex2],\n    };\n  } else if (quesType == MULTIPLECHOICE) {\n    questionType = (\n      <>\n        <Text style={styles.header3}>Enter choices:</Text>\n        <Input placeholder=\"Add a choice\" onChangeText={setChoicesText}></Input>\n        <Pressable\n          style={[styles.button, styles.buttonOpen]}\n          onPress={() => setMultiChoices([...multiChoices, choicesText])}\n        >\n          <Text style={styles.textStyle}>Add choice</Text>\n        </Pressable>\n        <Text style={styles.header3}>\n          Choices: (Please mark which answer is correct)\n        </Text>\n        <ScrollView style={{ height: height / 6, width: \"100%\" }}>\n          {formatMultiChoices}\n        </ScrollView>\n      </>\n    );\n    questionObject = {\n      prompt: questionPrompt,\n      key: questions.length == 0 ? 0 : questions[questions.length - 1].key + 1,\n      type: quesType,\n      choices: multiChoices,\n      answer: multiChoices[selectedIndex2],\n    };\n  }\n  let handleDelete = (question) => {\n    console.log(question);\n    let createNewQuestions = questions.filter(\n      (q) => q.prompt !== question.prompt\n    );\n    setQuestions(createNewQuestions);\n  };\n\n  let renderItem = ({ item, index }) => {\n    // console.log(\"Returning flatlist...\");\n    // console.log(item.type);\n    if (item.type !== INPUT) {\n      return (\n        <View style={styles.questionContainer}>\n          <View\n            style={{\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View>\n              <Text style={styles.header3}>Question #{index + 1}</Text>\n              <Text style={[styles.bodyText, { marginTop: 5 }]}>\n                {item.prompt}\n              </Text>\n              <Text style={styles.bodyText}>Choices:</Text>\n              <FlatList\n                data={item.choices}\n                renderItem={({ item }) => {\n                  return (\n                    <Text\n                      key={item.prompt}\n                      style={[styles.bodyText, { marginLeft: 20 }]}\n                    >\n                      {item}\n                    </Text>\n                  );\n                }}\n              ></FlatList>\n              <Text style={styles.bodyText}>Answer: {item.answer}</Text>\n            </View>\n            <View\n              style={{\n                flex: 1,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                gap: 0,\n                marginLeft: horizontalScale(80),\n              }}\n            >\n              <Pressable\n                onPress={() => {\n                  setQuesIndex(item.key);\n                  setQuestionPrompt(item.prompt);\n                  setQuesType(item.type);\n                  setValue(item.type);\n                  if (item.type == DROPDOWN) {\n                    setDropChoices(item.choices);\n                  } else {\n                    setMultiChoices(item.choices);\n                  }\n                  setSelectedIndex2(item.choices.indexOf(item.answer));\n                  setEditModal(true);\n                  setModalVisible(true);\n                }}\n              >\n                <MaterialIcons\n                  reverse\n                  name=\"edit\"\n                  color=\"#134611\"\n                  size={18}\n                ></MaterialIcons>\n              </Pressable>\n              <Pressable\n                style={[styles.button]}\n                onPress={() => {\n                  handleDelete(questions[index]);\n                }}\n              >\n                <MaterialIcons\n                  reverse\n                  name=\"delete\"\n                  color=\"#134611\"\n                  size={18}\n                ></MaterialIcons>\n              </Pressable>\n            </View>\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <View style={styles.questionContainer}>\n          <View\n            style={{\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View>\n              <Text style={styles.header3}>Question #{index + 1}</Text>\n              <Text style={[styles.bodyText, { marginTop: 5 }]}>\n                {item.prompt}\n              </Text>\n              <Text style={styles.bodyText}>Answer: {item.answer}</Text>\n            </View>\n            <View\n              style={[\n                {\n                  flex: 1,\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  gap: 0,\n                  marginLeft: horizontalScale(80),\n                },\n              ]}\n            >\n              <Pressable\n                onPress={() => {\n                  setQuesIndex(item.key);\n                  setQuestionPrompt(item.prompt);\n                  setQuesType(item.type);\n                  setInputAnswer(item.answer);\n                  setEditModal(true);\n                  setModalVisible(true);\n                  setValue(item.type);\n                }}\n              >\n                <MaterialIcons\n                  reverse\n                  name=\"edit\"\n                  color=\"#134611\"\n                  size={18}\n                ></MaterialIcons>\n              </Pressable>\n              <Pressable\n                style={[styles.button]}\n                onPress={() => {\n                  handleDelete(questions[index]);\n                }}\n              >\n                <MaterialIcons\n                  reverse\n                  name=\"delete\"\n                  color=\"#134611\"\n                  size={18}\n                ></MaterialIcons>\n              </Pressable>\n            </View>\n          </View>\n        </View>\n      );\n    }\n  };\n  let ifNoQuestions = () => {\n    if (questions.length === 0) {\n      return (\n        <View style={styles.questionContainer}>\n          <Text style={styles.header3}>You currently have no questions</Text>\n        </View>\n      );\n    }\n  };\n\n  if (editModal == false) {\n    modalMode = (\n      <>\n        <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={modalVisible}\n          onRequestClose={() => {\n            Alert.alert(\"Modal has been closed.\");\n            setModalVisible(!modalVisible);\n          }}\n        >\n          <View style={styles.modalView}>\n            <Text style={[styles.modalText, styles.header2]}>\n              Create a question\n            </Text>\n            <Input\n              placeholder=\"Question prompt\"\n              onChangeText={setQuestionPrompt}\n              errorMessage={error}\n            ></Input>\n            <Text style={[styles.modalText, styles.header3]}>\n              Question type:\n            </Text>\n            <DropDownPicker\n              open={open}\n              value={value}\n              items={items}\n              setOpen={setOpen}\n              setValue={(value) => {\n                setValue(value);\n                setQuesType(value);\n              }}\n              setItems={setItems}\n            />\n\n            {questionType}\n            <View\n              style={[\n                styles.buttonContainer,\n                { marginTop: 10, marginBottom: -10 },\n              ]}\n            >\n              <Pressable\n                style={[styles.button, styles.buttonClose]}\n                onPress={() => {\n                  if (value == null || questionPrompt.length == 0) {\n                    setError(\"All fields must be entered\");\n                    // } else if (quesType == INPUT) {\n                    //   if (inputAnswer.length == 0)\n                    //     console.log(\"input is still zero\");\n                    //   setError(\"All fields must be entered\");\n                    //   // } else if (value == DROPDOWN && dropChoices.length == 0) {\n                    //   //   setError(\"All fields must be entered\");\n                  } else {\n                    setError(\"\");\n                    setErrorAnswer(\"\");\n                    error = false;\n                    setModalVisible(!modalVisible);\n                    setQuestions([...questions, questionObject]);\n                    // console.log(questions);\n                    // clear the arrays\n                    setDropChoices([]);\n                    setMultiChoices([]);\n                    // clear inputs\n                    setQuestionPrompt(\"\");\n                    setInputAnswer(\"\");\n                    setChoicesText(\"\");\n                    setQuesType();\n                    setSelectedIndex2();\n                    setValue(null);\n                  }\n                }}\n              >\n                <Text style={styles.textStyle}>Save Question</Text>\n              </Pressable>\n              <Pressable\n                style={[styles.button, styles.buttonClose]}\n                onPress={() => {\n                  setModalVisible(!modalVisible);\n                  // clear the arrays\n                  setDropChoices([]);\n                  setMultiChoices([]);\n                  // clear inputs\n                  setQuestionPrompt(\"\");\n                  setInputAnswer(\"\");\n                  setChoicesText(\"\");\n                  setQuesType();\n                  setSelectedIndex2();\n                  setValue(null);\n                }}\n              >\n                <Text style={styles.textStyle}>Exit</Text>\n              </Pressable>\n            </View>\n          </View>\n        </Modal>\n      </>\n    );\n  } else {\n    console.log(\"Edit modal mode is on...\");\n\n    // change questionType\n    if (quesType == INPUT) {\n      questionType = (\n        <>\n          <Text style={styles.header3}>Enter Answer:</Text>\n          <Input value={inputAnswer} onChangeText={setInputAnswer}></Input>\n        </>\n      );\n      questionObject = {\n        prompt: questionPrompt,\n        type: quesType,\n        answer: inputAnswer,\n      };\n    } else if (quesType == DROPDOWN) {\n      questionType = (\n        <>\n          <Text style={styles.header3}>Enter choices:</Text>\n          <Input\n            placeholder=\"Add a choice\"\n            onChangeText={setChoicesText}\n          ></Input>\n          <Pressable\n            style={[styles.button, styles.buttonOpen]}\n            onPress={() => {\n              setDropChoices([...dropChoices, choicesText]);\n              // console.log(dropChoices);\n            }}\n          >\n            <Text style={styles.textStyle}>Add choice</Text>\n          </Pressable>\n          <Text style={styles.header3}>\n            Choices: (Please mark which answer is correct)\n          </Text>\n          <ScrollView style={{ height: height / 6, width: \"100%\" }}>\n            {formatDropChoices}\n          </ScrollView>\n        </>\n      );\n      questionObject = {\n        prompt: questionPrompt,\n        type: quesType,\n        choices: dropChoices,\n        answer: dropChoices[selectedIndex2],\n      };\n    } else if (quesType == MULTIPLECHOICE) {\n      type = \"multiple-choice\";\n      questionType = (\n        <>\n          <Text style={styles.header3}>Enter choices:</Text>\n          <Input\n            placeholder=\"Add a choice\"\n            onChangeText={setChoicesText}\n          ></Input>\n          <Pressable\n            style={[styles.button, styles.buttonOpen]}\n            onPress={() => setMultiChoices([...multiChoices, choicesText])}\n          >\n            <Text style={styles.textStyle}>Add choice</Text>\n          </Pressable>\n          <Text style={styles.header3}>\n            Choices: (Please mark which answer is correct)\n          </Text>\n          <ScrollView style={{ height: height / 6, width: \"100%\" }}>\n            {formatMultiChoices}\n          </ScrollView>\n        </>\n      );\n      questionObject = {\n        prompt: questionPrompt,\n        type: quesType,\n        choices: multiChoices,\n        answer: multiChoices[selectedIndex2],\n      };\n    }\n    modalMode = (\n      <>\n        <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={modalVisible}\n          onRequestClose={() => {\n            Alert.alert(\"Modal has been closed.\");\n            setModalVisible(!modalVisible);\n          }}\n        >\n          <View style={styles.modalView}>\n            <Text style={[styles.modalText, styles.header2]}>\n              Edit question\n            </Text>\n            <Input\n              value={questionPrompt}\n              onChangeText={setQuestionPrompt}\n            ></Input>\n            <Text style={[styles.modalText, styles.header3]}>\n              Question type:\n            </Text>\n            <DropDownPicker\n              open={open}\n              value={value}\n              items={items}\n              setOpen={setOpen}\n              setValue={(value) => {\n                setValue(value);\n                setQuesType(value);\n              }}\n              setItems={setItems}\n            />\n            {questionType}\n            <View\n              style={[\n                styles.buttonContainer,\n                { marginTop: 10, marginBottom: -10 },\n              ]}\n            >\n              <Pressable\n                style={[styles.button, styles.buttonClose]}\n                onPress={() => {\n                  let newQuestionObj;\n                  if (quesType == INPUT) {\n                    newQuestionObj = {\n                      prompt: questionPrompt,\n                      key: quesIndex,\n                      type: quesType,\n                      answer: inputAnswer,\n                    };\n                  } else {\n                    newQuestionObj = {\n                      prompt: questionPrompt,\n                      key: quesIndex,\n                      type: quesType,\n                      choices:\n                        quesType == DROPDOWN ? dropChoices : multiChoices,\n                      answer:\n                        quesType == DROPDOWN\n                          ? dropChoices[selectedIndex2]\n                          : multiChoices[selectedIndex2],\n                    };\n                  }\n                  questions.splice(quesIndex, 1, newQuestionObj);\n                  console.log(questions);\n                  setModalVisible(!modalVisible);\n                  console.log(newQuestionObj);\n\n                  // clear the arrays\n                  setDropChoices([]);\n                  setMultiChoices([]);\n                  // clear inputs\n                  setQuestionPrompt(\"\");\n                  setInputAnswer(\"\");\n                  setChoicesText(\"\");\n                  setSelectedIndex2();\n                  setQuesType();\n                  setValue(null);\n                }}\n              >\n                <Text style={styles.textStyle}>Change Question</Text>\n              </Pressable>\n              <Pressable\n                style={[styles.button, styles.buttonClose]}\n                onPress={() => {\n                  setModalVisible(!modalVisible);\n                  // clear the arrays\n                  // clear the arrays\n                  setDropChoices([]);\n                  setMultiChoices([]);\n                  // clear inputs\n                  setQuestionPrompt(\"\");\n                  setInputAnswer(\"\");\n                  setChoicesText(\"\");\n                  setSelectedIndex2();\n                  setQuesType();\n                  setValue(null);\n                }}\n              >\n                <Text style={styles.textStyle}>Exit</Text>\n              </Pressable>\n            </View>\n          </View>\n        </Modal>\n      </>\n    );\n  }\n  // Create quiz return starts here\n  return (\n    <View style={styles.container}>\n      <Text style={[{ textAlign: \"center\" }, styles.header]}>\n        Create a Quiz\n      </Text>\n      <Text style={styles.header2}>Enter quiz title:</Text>\n      <Input\n        style={{ margin: 5 }}\n        placeholder=\"Title...\"\n        onChangeText={setTitle}\n      ></Input>\n      <Pressable\n        style={styles.buttonOpen}\n        onPress={() => {\n          setEditModal(false);\n          setModalVisible(true);\n        }}\n      >\n        <Text style={styles.textStyle}>Add a question</Text>\n      </Pressable>\n      <Text style={styles.header2}>Your questions:</Text>\n      {ifNoQuestions()}\n      <FlatList data={questions} renderItem={renderItem}></FlatList>\n      <View style={styles.centeredView}>{modalMode}</View>\n      <View style={[styles.buttonContainer, { marginTop: 10 }]}>\n        <Pressable\n          style={{\n            width: horizontalScale(120),\n            backgroundColor: \"#134611\",\n            borderRadius: 20,\n            padding: 10,\n            elevation: 2,\n            margin: 10,\n            marginBottom: -40,\n          }}\n          onPress={() => {\n            console.log(quizArray[quizArray.length - 1]);\n            let quiz = {\n              title: title,\n              quizKey:\n                quizArray.length == 0\n                  ? 0\n                  : quizArray[quizArray.length - 1].quizKey + 1,\n              questions: questions,\n            };\n\n            quizArray.push(quiz);\n            navigation.navigate(\"Home\", { quizDisplay: quizArray });\n          }}\n        >\n          <Text style={styles.textStyle}>Save</Text>\n        </Pressable>\n        <Pressable\n          style={styles.iconButton}\n          onPress={() =>\n            navigation.navigate(\"Home\", { quizDisplay: quizArray })\n          }\n        >\n          <MaterialIcons name=\"home\" color=\"#FFFEFE\" size={50}></MaterialIcons>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  mobileContainer: {\n    width: \"100%\",\n    maxWidth: 400,\n    alignSelf: \"center\",\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  questionContainer: {\n    backgroundColor: \"#FFFEFE\",\n    padding: 10,\n    margin: 10,\n    borderRadius: 20,\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n  },\n  container: {\n    borderRadius: 40,\n    marginTop: verticalScale(40),\n    margin: 20,\n    backgroundColor: \"#E8FCCF\",\n    height: verticalScale(720),\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n  },\n  backgrounColor: {\n    backgroundColor: \"green\",\n  },\n  buttonQuiz: {\n    backgroundColor: \"#3DA35D\",\n    margin: 20,\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n  },\n  iconButton: {\n    width: Platform.OS === \"web\" ? verticalScale(90) : verticalScale(80),\n    height: Platform.OS === \"web\" ? verticalScale(90) : verticalScale(80),\n    backgroundColor: \"#3DA35D\",\n    borderRadius: Platform.OS === \"web\" ? 90 : 80,\n    padding: 10,\n    elevation: 2,\n    marginRight: horizontalScale(5),\n    marginBottom: verticalScale(-40),\n    justifyContent: \"center\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n  },\n  buttonCreateQuiz: {\n    backgroundColor: \"#134611\",\n    borderRadius: 100,\n    height: 100,\n    width: 100,\n    padding: 10,\n    elevation: 2,\n  },\n  header: {\n    fontSize: 46,\n    fontFamily: \"Nunito-Bold\",\n    color: \"#134611\",\n    margin: 35,\n    textAlign: \"center\",\n  },\n  header2: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginLeft: 10,\n  },\n  header3: {\n    fontSize: 17,\n    fontWeight: \"bold\",\n    marginLeft: 10,\n    color: \"#134611\",\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22,\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n  },\n  buttonOpen: {\n    backgroundColor: \"#3DA35D\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    margin: 8,\n    marginBottom: 20,\n  },\n  buttonClose: {\n    backgroundColor: \"#134611\",\n    borderRadius: 20,\n    padding: 12,\n    elevation: 2,\n    margin: 8,\n  },\n  bodyText: {\n    fontSize: 15,\n    marginLeft: 10,\n    marginTop: 5,\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    fontSize: 20,\n  },\n  quizTextStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontFamily: \"Nunito-Regular\",\n    textAlign: \"left\",\n    fontSize: 25,\n    margin: 40,\n  },\n  modalView: {\n    // maxHeight: \"80%\",\n    // overflow: \"scroll\",\n    margin: 20,\n    backgroundColor: \"#FFFEFE\",\n    borderRadius: 20,\n    padding: 35,\n\n    alignItems: \"center\",\n\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\",\n  },\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/studyApp/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [823], () => (__webpack_require__(9484)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["INPUT","DROPDOWN","MULTIPLECHOICE","Stack","createNativeStackNavigator","navTheme","DefaultTheme","colors","background","SplashScreen","_Dimensions$get","Dimensions","width","height","horizontalScale","size","verticalScale","quizArray","title","quizKey","questions","prompt","type","answer","key","choices","App","_useState","useState","setLoaded","_slicedToArray","useEffect","fonts","FontAwesome","MaterialIcons","Promise","all","map","_ref","_asyncToGenerator","font","Font","_x","apply","arguments","then","_jsx","NavigationContainer","theme","children","_jsxs","Navigator","initialRouteName","Screen","initialParams","quizDisplay","name","component","Home","options","headerShown","Quiz","userAnswers","Summary","CreateQuiz","_ref2","route","navigation","_useFonts","useFonts","require","fontsLoaded","onLayoutRootView","useCallback","params","View","style","styles","container","onLayout","flex","flexDirection","alignContent","alignItems","gap","Text","header","FlatList","data","renderItem","_ref4","item","index","Pressable","button","buttonQuiz","onPress","navigate","quizTitle","questionNum","quizTextStyle","color","textAlign","fontSize","marginLeft","marginBottom","length","justifyContent","iconButton","_ref5","_route$params","_useState3","_useState4","curAnswer","setCurAnswer","console","log","_questions$questionNu","questionType","InputText","handleAnswer","DropDown","MultipleChoice","marginTop","questionContainer","marginRight","header2","padding","backgroundColor","borderRadius","elevation","margin","nextQuestion","concat","_toConsumableArray","textStyle","_ref6","_useState5","_useState6","answerText","setAnswerText","Input","placeholder","value","onChangeText","_ref7","_useState7","_useState8","open","setOpen","_useState9","_useState10","setValue","items","label","_Fragment","DropDownPicker","_ref8","_useState11","_useState12","selectedIndex","setSelectedIndex","ButtonGroup","buttons","vertical","_ref9","_route$params2","calculateCorrect","userAnswer","totalScore","i","_ref10","userSelected","indexOf","userCorrect","bodyText","header3","choiceIndex","correct","userDidSelect","CheckBox","containerStyle","undefined","checked","_ref11","questionObject","modalMode","_useState13","_useState14","setTitle","_useState15","_useState16","modalVisible","setModalVisible","_useState17","_useState18","setQuestions","_useState19","_useState20","questionPrompt","setQuestionPrompt","_useState21","_useState22","dropChoices","setDropChoices","_useState23","_useState24","multiChoices","setMultiChoices","_useState25","_useState26","inputAnswer","setInputAnswer","_useState27","_useState28","choicesText","setChoicesText","_useState29","_useState30","editModal","setEditModal","_useState31","_useState32","quesIndex","setQuesIndex","_useState33","_useState34","selectedIndex2","setSelectedIndex2","_useState35","_useState36","error","setError","_useState37","_useState38","setErrorAnswer","_useState39","_useState40","_useState41","_useState42","_useState43","_useState44","quesType","setQuesType","_useState45","_useState46","setItems","formatDropChoices","checkedColor","formatMultiChoices","buttonOpen","ScrollView","handleDelete","question","createNewQuestions","filter","q","Modal","animationType","transparent","visible","onRequestClose","Alert","modalView","modalText","errorMessage","buttonContainer","buttonClose","newQuestionObj","splice","ifNoQuestions","_ref12","_ref13","reverse","centeredView","quiz","push","StyleSheet","mobileContainer","maxWidth","alignSelf","shadowOffset","shadowOpacity","shadowRadius","backgrounColor","Platform","buttonCreateQuiz","fontFamily","fontWeight","shadowColor","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","create","def","current","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}